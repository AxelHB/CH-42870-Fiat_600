header {
    background-color: rgba(0, 0, 0, 0.829);
    position: relative;
    padding: 0 80px;
    a {
        color: white;
        font-size: 15px;
    }
    a:hover {
        color: orange;
    }
    .navbar {
        width: 100%;
        height: 60px;
        max-width: 1440px;
        margin: 0 auto;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }
    .navbar .logo img {
        height: 50px;
        width: 50px;
        margin-right: 20px;
    }
    .navbar .logo a {
        font-size: 25px;
    }
    .navbar .logo a span {
        color: aqua;
    }
    .navbar .links {
        display: flex;
        gap: 20px;
        margin: 0 auto;
    }
    .navbar .toggle_btn {
        color: white;
        font-size: 25px;
        cursor: pointer;
        margin-left: 20px;
        display: none;
    }
    //BOTON COMENCEMOS
    .action_btn {
        background-color: orange;
        color: rgb(0, 0, 0);
        padding: 5px 5px;
        border: none;
        outline: none;
        border-radius: 20px;
        font-weight: bold;
        cursor: pointer;
        transition: scale 0.2 ease;
    }
    .action_btn:hover {
        scale: 1.05;
        color: white;
    }
    .action_btn:active {
        scale: 0.95;
    }
}

//DROPDOWN MENU
.dropdown_menu {
    display: none;
    position: absolute;
    z-index: 10000;
    right: 10px;
    top: 60px;
    width: 300px;
    height: 0;
    background-color: rgba(80, 80, 80, 0.623);
    backdrop-filter: blur(15px);
    border-radius: 10px;
    overflow: hidden;
    transition: height .2s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}
.dropdown_menu.open {
    height: 240px;
}
.dropdown_menu li {
    padding: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
}
.dropdown_menu .action_btn {
    width: 100%;
    display: flex;
    justify-content: center;
}
//RESPONSIVO
@media (max-width: 992px) {
    header .navbar .links , 
    header .navbar .action_btn {
        display: none;
    }

    header .navbar .toggle_btn {
        display: block;
    }
    .dropdown_menu {
        display: block;
    }
}

@media (max-width: 576px) {
    .dropdown_menu {
        left: 20px;
        width: unset;
    }
    header .navbar .logo a {
        font-size: 20px;
    }
    header .navbar .logo img {
        width: 35px;
        height: 35px;
    }
    header {
        padding: 0 20px;
    }
}

//BANNER FITO
.zona1 {
     position: relative;
     bottom: 0  ;
     display: flex;
     flex-direction: column;
     justify-content: flex-start;
     align-items: center;
     text-align: center;
     width: 100%;
     height: 100vh;
     background-image: url(../image/IMG-INDEX/HEADER-FITO.jpeg);
     background-size: cover; //HACEMOS QUE NO SE REPITA LA IMAGEN
     background-attachment: fixed;
     background-position: center; //CENTRAMOS LA IMAGEN
     h1 {
        color: rgb(201, 207, 107);
     }
     p {
        margin-top: -10px;
        color: rgb(247, 242, 1);
        font-size: 20px;
     }
 }

 /*
    Algunas concluciones con respecto a las imágenes
    
    1. Por defecto si no indicamos nada, la imagen aparece por defecto con su tamaño.
    
    2. Si se establece un size concreto con porcentajes o pixeles, se pierde la relación de aspecto y la calidad.

    3. Con size contain, se le da la propiedad para mostrar la imagen completa en el elemento, manteniendo la relacion de aspecto.

    4. Con size cover, se le da la propiedad para que la imagen cubra al elemento entero, manteniendo la relacion de aspecto.

    Una de las soluciones mas usadas son: Size Cover con attachment fixed y position center.
                                        Size Contain en caso de ser necesario mostrar toda la imagen con background repeat para que se quede el elemento cubierto.
 */
 